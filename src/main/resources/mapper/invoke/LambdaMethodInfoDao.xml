<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lv.infrastructure.invoke.dao.LambdaMethodInfoDao">

    <resultMap type="com.lv.domain.invoke.LambdaMethodInfoDo" id="LambdaMethodInfoMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="projectId" column="project_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="VARCHAR"/>
        <result property="lambdaCalleeClassName" column="lambda_callee_class_name" jdbcType="VARCHAR"/>
        <result property="lambdaCalleeMethodName" column="lambda_callee_method_name" jdbcType="VARCHAR"/>
        <result property="lambdaCalleeFullMethod" column="lambda_callee_full_method" jdbcType="VARCHAR"/>
        <result property="lambdaNextClassName" column="lambda_next_class_name" jdbcType="VARCHAR"/>
        <result property="lambdaNextMethodName" column="lambda_next_method_name" jdbcType="VARCHAR"/>
        <result property="lambdaNextFullMethod" column="lambda_next_full_method" jdbcType="VARCHAR"/>
        <result property="lambdaNextIsStream" column="lambda_next_is_stream" jdbcType="INTEGER"/>
        <result property="lambdaNextIsIntermediate" column="lambda_next_is_intermediate" jdbcType="INTEGER"/>
        <result property="lambdaNextIsTerminal" column="lambda_next_is_terminal" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="LambdaMethodInfoMap">
        select
          id, project_id, create_time, update_time, is_deleted, lambda_callee_class_name, lambda_callee_method_name, lambda_callee_full_method, lambda_next_class_name, lambda_next_method_name, lambda_next_full_method, lambda_next_is_stream, lambda_next_is_intermediate, lambda_next_is_terminal
        from lv_invoke_lambda_method_info
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="LambdaMethodInfoMap">
        select
          id, project_id, create_time, update_time, is_deleted, lambda_callee_class_name, lambda_callee_method_name, lambda_callee_full_method, lambda_next_class_name, lambda_next_method_name, lambda_next_full_method, lambda_next_is_stream, lambda_next_is_intermediate, lambda_next_is_terminal
        from lv_invoke_lambda_method_info
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="projectId != null">
                and project_id = #{projectId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDeleted != null and isDeleted != ''">
                and is_deleted = #{isDeleted}
            </if>
            <if test="lambdaCalleeClassName != null and lambdaCalleeClassName != ''">
                and lambda_callee_class_name = #{lambdaCalleeClassName}
            </if>
            <if test="lambdaCalleeMethodName != null and lambdaCalleeMethodName != ''">
                and lambda_callee_method_name = #{lambdaCalleeMethodName}
            </if>
            <if test="lambdaCalleeFullMethod != null and lambdaCalleeFullMethod != ''">
                and lambda_callee_full_method = #{lambdaCalleeFullMethod}
            </if>
            <if test="lambdaNextClassName != null and lambdaNextClassName != ''">
                and lambda_next_class_name = #{lambdaNextClassName}
            </if>
            <if test="lambdaNextMethodName != null and lambdaNextMethodName != ''">
                and lambda_next_method_name = #{lambdaNextMethodName}
            </if>
            <if test="lambdaNextFullMethod != null and lambdaNextFullMethod != ''">
                and lambda_next_full_method = #{lambdaNextFullMethod}
            </if>
            <if test="lambdaNextIsStream != null">
                and lambda_next_is_stream = #{lambdaNextIsStream}
            </if>
            <if test="lambdaNextIsIntermediate != null">
                and lambda_next_is_intermediate = #{lambdaNextIsIntermediate}
            </if>
            <if test="lambdaNextIsTerminal != null">
                and lambda_next_is_terminal = #{lambdaNextIsTerminal}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from lv_invoke_lambda_method_info
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="projectId != null">
                and project_id = #{projectId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDeleted != null and isDeleted != ''">
                and is_deleted = #{isDeleted}
            </if>
            <if test="lambdaCalleeClassName != null and lambdaCalleeClassName != ''">
                and lambda_callee_class_name = #{lambdaCalleeClassName}
            </if>
            <if test="lambdaCalleeMethodName != null and lambdaCalleeMethodName != ''">
                and lambda_callee_method_name = #{lambdaCalleeMethodName}
            </if>
            <if test="lambdaCalleeFullMethod != null and lambdaCalleeFullMethod != ''">
                and lambda_callee_full_method = #{lambdaCalleeFullMethod}
            </if>
            <if test="lambdaNextClassName != null and lambdaNextClassName != ''">
                and lambda_next_class_name = #{lambdaNextClassName}
            </if>
            <if test="lambdaNextMethodName != null and lambdaNextMethodName != ''">
                and lambda_next_method_name = #{lambdaNextMethodName}
            </if>
            <if test="lambdaNextFullMethod != null and lambdaNextFullMethod != ''">
                and lambda_next_full_method = #{lambdaNextFullMethod}
            </if>
            <if test="lambdaNextIsStream != null">
                and lambda_next_is_stream = #{lambdaNextIsStream}
            </if>
            <if test="lambdaNextIsIntermediate != null">
                and lambda_next_is_intermediate = #{lambdaNextIsIntermediate}
            </if>
            <if test="lambdaNextIsTerminal != null">
                and lambda_next_is_terminal = #{lambdaNextIsTerminal}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into lv_invoke_lambda_method_info(project_id, create_time, update_time, is_deleted, lambda_callee_class_name, lambda_callee_method_name, lambda_callee_full_method, lambda_next_class_name, lambda_next_method_name, lambda_next_full_method, lambda_next_is_stream, lambda_next_is_intermediate, lambda_next_is_terminal)
        values (#{projectId}, #{createTime}, #{updateTime}, #{isDeleted}, #{lambdaCalleeClassName}, #{lambdaCalleeMethodName}, #{lambdaCalleeFullMethod}, #{lambdaNextClassName}, #{lambdaNextMethodName}, #{lambdaNextFullMethod}, #{lambdaNextIsStream}, #{lambdaNextIsIntermediate}, #{lambdaNextIsTerminal})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into lv_invoke_lambda_method_info(project_id, create_time, update_time, is_deleted, lambda_callee_class_name, lambda_callee_method_name, lambda_callee_full_method, lambda_next_class_name, lambda_next_method_name, lambda_next_full_method, lambda_next_is_stream, lambda_next_is_intermediate, lambda_next_is_terminal)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.projectId}, #{entity.createTime}, #{entity.updateTime}, #{entity.isDeleted}, #{entity.lambdaCalleeClassName}, #{entity.lambdaCalleeMethodName}, #{entity.lambdaCalleeFullMethod}, #{entity.lambdaNextClassName}, #{entity.lambdaNextMethodName}, #{entity.lambdaNextFullMethod}, #{entity.lambdaNextIsStream}, #{entity.lambdaNextIsIntermediate}, #{entity.lambdaNextIsTerminal})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into lv_invoke_lambda_method_info(project_id, create_time, update_time, is_deleted, lambda_callee_class_name, lambda_callee_method_name, lambda_callee_full_method, lambda_next_class_name, lambda_next_method_name, lambda_next_full_method, lambda_next_is_stream, lambda_next_is_intermediate, lambda_next_is_terminal)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.projectId}, #{entity.createTime}, #{entity.updateTime}, #{entity.isDeleted}, #{entity.lambdaCalleeClassName}, #{entity.lambdaCalleeMethodName}, #{entity.lambdaCalleeFullMethod}, #{entity.lambdaNextClassName}, #{entity.lambdaNextMethodName}, #{entity.lambdaNextFullMethod}, #{entity.lambdaNextIsStream}, #{entity.lambdaNextIsIntermediate}, #{entity.lambdaNextIsTerminal})
        </foreach>
        on duplicate key update
        project_id = values(project_id),
        create_time = values(create_time),
        update_time = values(update_time),
        is_deleted = values(is_deleted),
        lambda_callee_class_name = values(lambda_callee_class_name),
        lambda_callee_method_name = values(lambda_callee_method_name),
        lambda_callee_full_method = values(lambda_callee_full_method),
        lambda_next_class_name = values(lambda_next_class_name),
        lambda_next_method_name = values(lambda_next_method_name),
        lambda_next_full_method = values(lambda_next_full_method),
        lambda_next_is_stream = values(lambda_next_is_stream),
        lambda_next_is_intermediate = values(lambda_next_is_intermediate),
        lambda_next_is_terminal = values(lambda_next_is_terminal)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update lv_invoke_lambda_method_info
        <set>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="isDeleted != null and isDeleted != ''">
                is_deleted = #{isDeleted},
            </if>
            <if test="lambdaCalleeClassName != null and lambdaCalleeClassName != ''">
                lambda_callee_class_name = #{lambdaCalleeClassName},
            </if>
            <if test="lambdaCalleeMethodName != null and lambdaCalleeMethodName != ''">
                lambda_callee_method_name = #{lambdaCalleeMethodName},
            </if>
            <if test="lambdaCalleeFullMethod != null and lambdaCalleeFullMethod != ''">
                lambda_callee_full_method = #{lambdaCalleeFullMethod},
            </if>
            <if test="lambdaNextClassName != null and lambdaNextClassName != ''">
                lambda_next_class_name = #{lambdaNextClassName},
            </if>
            <if test="lambdaNextMethodName != null and lambdaNextMethodName != ''">
                lambda_next_method_name = #{lambdaNextMethodName},
            </if>
            <if test="lambdaNextFullMethod != null and lambdaNextFullMethod != ''">
                lambda_next_full_method = #{lambdaNextFullMethod},
            </if>
            <if test="lambdaNextIsStream != null">
                lambda_next_is_stream = #{lambdaNextIsStream},
            </if>
            <if test="lambdaNextIsIntermediate != null">
                lambda_next_is_intermediate = #{lambdaNextIsIntermediate},
            </if>
            <if test="lambdaNextIsTerminal != null">
                lambda_next_is_terminal = #{lambdaNextIsTerminal},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from lv_invoke_lambda_method_info where id = #{id}
    </delete>

</mapper>

