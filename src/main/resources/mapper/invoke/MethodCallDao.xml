<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lv.infrastructure.invoke.dao.MethodCallDao">

    <resultMap type="com.lv.domain.invoke.MethodCallDo" id="MethodCallMap">
        <result property="projectId" column="project_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="VARCHAR"/>
        <result property="callId" column="call_id" jdbcType="INTEGER"/>
        <result property="callType" column="call_type" jdbcType="VARCHAR"/>
        <result property="calleeObjType" column="callee_obj_type" jdbcType="VARCHAR"/>
        <result property="enabled" column="enabled" jdbcType="INTEGER"/>
        <result property="callerMethodHash" column="caller_method_hash" jdbcType="VARCHAR"/>
        <result property="callerSimpleClassName" column="caller_simple_class_name" jdbcType="VARCHAR"/>
        <result property="callerMethodName" column="caller_method_name" jdbcType="VARCHAR"/>
        <result property="callerFullMethod" column="caller_full_method" jdbcType="VARCHAR"/>
        <result property="callerLineNumber" column="caller_line_number" jdbcType="INTEGER"/>
        <result property="calleeMethodHash" column="callee_method_hash" jdbcType="VARCHAR"/>
        <result property="calleeSimpleClassName" column="callee_simple_class_name" jdbcType="VARCHAR"/>
        <result property="calleeMethodName" column="callee_method_name" jdbcType="VARCHAR"/>
        <result property="calleeFullMethod" column="callee_full_method" jdbcType="VARCHAR"/>
        <result property="callFlags" column="call_flags" jdbcType="INTEGER"/>
        <result property="rawReturnType" column="raw_return_type" jdbcType="VARCHAR"/>
        <result property="actualReturnType" column="actual_return_type" jdbcType="VARCHAR"/>
        <result property="callerJarNum" column="caller_jar_num" jdbcType="INTEGER"/>
        <result property="calleeJarNum" column="callee_jar_num" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MethodCallMap">
        select
          project_id, create_time, update_time, is_deleted, call_id, call_type, callee_obj_type, enabled, caller_method_hash, caller_simple_class_name, caller_method_name, caller_full_method, caller_line_number, callee_method_hash, callee_simple_class_name, callee_method_name, callee_full_method, call_flags, raw_return_type, actual_return_type, caller_jar_num, callee_jar_num
        from lv_invoke_method_call
        where call_id = #{callId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MethodCallMap">
        select
          project_id, create_time, update_time, is_deleted, call_id, call_type, callee_obj_type, enabled, caller_method_hash, caller_simple_class_name, caller_method_name, caller_full_method, caller_line_number, callee_method_hash, callee_simple_class_name, callee_method_name, callee_full_method, call_flags, raw_return_type, actual_return_type, caller_jar_num, callee_jar_num
        from lv_invoke_method_call
        <where>
            <if test="projectId != null">
                and project_id = #{projectId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDeleted != null and isDeleted != ''">
                and is_deleted = #{isDeleted}
            </if>
            <if test="callId != null">
                and call_id = #{callId}
            </if>
            <if test="callType != null and callType != ''">
                and call_type = #{callType}
            </if>
            <if test="calleeObjType != null and calleeObjType != ''">
                and callee_obj_type = #{calleeObjType}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="callerMethodHash != null and callerMethodHash != ''">
                and caller_method_hash = #{callerMethodHash}
            </if>
            <if test="callerSimpleClassName != null and callerSimpleClassName != ''">
                and caller_simple_class_name = #{callerSimpleClassName}
            </if>
            <if test="callerMethodName != null and callerMethodName != ''">
                and caller_method_name = #{callerMethodName}
            </if>
            <if test="callerFullMethod != null and callerFullMethod != ''">
                and caller_full_method = #{callerFullMethod}
            </if>
            <if test="callerLineNumber != null">
                and caller_line_number = #{callerLineNumber}
            </if>
            <if test="calleeMethodHash != null and calleeMethodHash != ''">
                and callee_method_hash = #{calleeMethodHash}
            </if>
            <if test="calleeSimpleClassName != null and calleeSimpleClassName != ''">
                and callee_simple_class_name = #{calleeSimpleClassName}
            </if>
            <if test="calleeMethodName != null and calleeMethodName != ''">
                and callee_method_name = #{calleeMethodName}
            </if>
            <if test="calleeFullMethod != null and calleeFullMethod != ''">
                and callee_full_method = #{calleeFullMethod}
            </if>
            <if test="callFlags != null">
                and call_flags = #{callFlags}
            </if>
            <if test="rawReturnType != null and rawReturnType != ''">
                and raw_return_type = #{rawReturnType}
            </if>
            <if test="actualReturnType != null and actualReturnType != ''">
                and actual_return_type = #{actualReturnType}
            </if>
            <if test="callerJarNum != null">
                and caller_jar_num = #{callerJarNum}
            </if>
            <if test="calleeJarNum != null">
                and callee_jar_num = #{calleeJarNum}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from lv_invoke_method_call
        <where>
            <if test="projectId != null">
                and project_id = #{projectId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDeleted != null and isDeleted != ''">
                and is_deleted = #{isDeleted}
            </if>
            <if test="callId != null">
                and call_id = #{callId}
            </if>
            <if test="callType != null and callType != ''">
                and call_type = #{callType}
            </if>
            <if test="calleeObjType != null and calleeObjType != ''">
                and callee_obj_type = #{calleeObjType}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="callerMethodHash != null and callerMethodHash != ''">
                and caller_method_hash = #{callerMethodHash}
            </if>
            <if test="callerSimpleClassName != null and callerSimpleClassName != ''">
                and caller_simple_class_name = #{callerSimpleClassName}
            </if>
            <if test="callerMethodName != null and callerMethodName != ''">
                and caller_method_name = #{callerMethodName}
            </if>
            <if test="callerFullMethod != null and callerFullMethod != ''">
                and caller_full_method = #{callerFullMethod}
            </if>
            <if test="callerLineNumber != null">
                and caller_line_number = #{callerLineNumber}
            </if>
            <if test="calleeMethodHash != null and calleeMethodHash != ''">
                and callee_method_hash = #{calleeMethodHash}
            </if>
            <if test="calleeSimpleClassName != null and calleeSimpleClassName != ''">
                and callee_simple_class_name = #{calleeSimpleClassName}
            </if>
            <if test="calleeMethodName != null and calleeMethodName != ''">
                and callee_method_name = #{calleeMethodName}
            </if>
            <if test="calleeFullMethod != null and calleeFullMethod != ''">
                and callee_full_method = #{calleeFullMethod}
            </if>
            <if test="callFlags != null">
                and call_flags = #{callFlags}
            </if>
            <if test="rawReturnType != null and rawReturnType != ''">
                and raw_return_type = #{rawReturnType}
            </if>
            <if test="actualReturnType != null and actualReturnType != ''">
                and actual_return_type = #{actualReturnType}
            </if>
            <if test="callerJarNum != null">
                and caller_jar_num = #{callerJarNum}
            </if>
            <if test="calleeJarNum != null">
                and callee_jar_num = #{calleeJarNum}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="callId" useGeneratedKeys="true">
        insert into lv_invoke_method_call(project_id, create_time, update_time, is_deleted, call_type, callee_obj_type, enabled, caller_method_hash, caller_simple_class_name, caller_method_name, caller_full_method, caller_line_number, callee_method_hash, callee_simple_class_name, callee_method_name, callee_full_method, call_flags, raw_return_type, actual_return_type, caller_jar_num, callee_jar_num)
        values (#{projectId}, #{createTime}, #{updateTime}, #{isDeleted}, #{callType}, #{calleeObjType}, #{enabled}, #{callerMethodHash}, #{callerSimpleClassName}, #{callerMethodName}, #{callerFullMethod}, #{callerLineNumber}, #{calleeMethodHash}, #{calleeSimpleClassName}, #{calleeMethodName}, #{calleeFullMethod}, #{callFlags}, #{rawReturnType}, #{actualReturnType}, #{callerJarNum}, #{calleeJarNum})
    </insert>

    <insert id="insertBatch" keyProperty="callId" useGeneratedKeys="true">
        insert into lv_invoke_method_call(project_id, create_time, update_time, is_deleted, call_type, callee_obj_type, enabled, caller_method_hash, caller_simple_class_name, caller_method_name, caller_full_method, caller_line_number, callee_method_hash, callee_simple_class_name, callee_method_name, callee_full_method, call_flags, raw_return_type, actual_return_type, caller_jar_num, callee_jar_num)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.projectId}, #{entity.createTime}, #{entity.updateTime}, #{entity.isDeleted}, #{entity.callType}, #{entity.calleeObjType}, #{entity.enabled}, #{entity.callerMethodHash}, #{entity.callerSimpleClassName}, #{entity.callerMethodName}, #{entity.callerFullMethod}, #{entity.callerLineNumber}, #{entity.calleeMethodHash}, #{entity.calleeSimpleClassName}, #{entity.calleeMethodName}, #{entity.calleeFullMethod}, #{entity.callFlags}, #{entity.rawReturnType}, #{entity.actualReturnType}, #{entity.callerJarNum}, #{entity.calleeJarNum})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="callId" useGeneratedKeys="true">
        insert into lv_invoke_method_call(project_id, create_time, update_time, is_deleted, call_type, callee_obj_type, enabled, caller_method_hash, caller_simple_class_name, caller_method_name, caller_full_method, caller_line_number, callee_method_hash, callee_simple_class_name, callee_method_name, callee_full_method, call_flags, raw_return_type, actual_return_type, caller_jar_num, callee_jar_num)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.projectId}, #{entity.createTime}, #{entity.updateTime}, #{entity.isDeleted}, #{entity.callType}, #{entity.calleeObjType}, #{entity.enabled}, #{entity.callerMethodHash}, #{entity.callerSimpleClassName}, #{entity.callerMethodName}, #{entity.callerFullMethod}, #{entity.callerLineNumber}, #{entity.calleeMethodHash}, #{entity.calleeSimpleClassName}, #{entity.calleeMethodName}, #{entity.calleeFullMethod}, #{entity.callFlags}, #{entity.rawReturnType}, #{entity.actualReturnType}, #{entity.callerJarNum}, #{entity.calleeJarNum})
        </foreach>
        on duplicate key update
        project_id = values(project_id),
        create_time = values(create_time),
        update_time = values(update_time),
        is_deleted = values(is_deleted),
        call_type = values(call_type),
        callee_obj_type = values(callee_obj_type),
        enabled = values(enabled),
        caller_method_hash = values(caller_method_hash),
        caller_simple_class_name = values(caller_simple_class_name),
        caller_method_name = values(caller_method_name),
        caller_full_method = values(caller_full_method),
        caller_line_number = values(caller_line_number),
        callee_method_hash = values(callee_method_hash),
        callee_simple_class_name = values(callee_simple_class_name),
        callee_method_name = values(callee_method_name),
        callee_full_method = values(callee_full_method),
        call_flags = values(call_flags),
        raw_return_type = values(raw_return_type),
        actual_return_type = values(actual_return_type),
        caller_jar_num = values(caller_jar_num),
        callee_jar_num = values(callee_jar_num)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update lv_invoke_method_call
        <set>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="isDeleted != null and isDeleted != ''">
                is_deleted = #{isDeleted},
            </if>
            <if test="callType != null and callType != ''">
                call_type = #{callType},
            </if>
            <if test="calleeObjType != null and calleeObjType != ''">
                callee_obj_type = #{calleeObjType},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
            <if test="callerMethodHash != null and callerMethodHash != ''">
                caller_method_hash = #{callerMethodHash},
            </if>
            <if test="callerSimpleClassName != null and callerSimpleClassName != ''">
                caller_simple_class_name = #{callerSimpleClassName},
            </if>
            <if test="callerMethodName != null and callerMethodName != ''">
                caller_method_name = #{callerMethodName},
            </if>
            <if test="callerFullMethod != null and callerFullMethod != ''">
                caller_full_method = #{callerFullMethod},
            </if>
            <if test="callerLineNumber != null">
                caller_line_number = #{callerLineNumber},
            </if>
            <if test="calleeMethodHash != null and calleeMethodHash != ''">
                callee_method_hash = #{calleeMethodHash},
            </if>
            <if test="calleeSimpleClassName != null and calleeSimpleClassName != ''">
                callee_simple_class_name = #{calleeSimpleClassName},
            </if>
            <if test="calleeMethodName != null and calleeMethodName != ''">
                callee_method_name = #{calleeMethodName},
            </if>
            <if test="calleeFullMethod != null and calleeFullMethod != ''">
                callee_full_method = #{calleeFullMethod},
            </if>
            <if test="callFlags != null">
                call_flags = #{callFlags},
            </if>
            <if test="rawReturnType != null and rawReturnType != ''">
                raw_return_type = #{rawReturnType},
            </if>
            <if test="actualReturnType != null and actualReturnType != ''">
                actual_return_type = #{actualReturnType},
            </if>
            <if test="callerJarNum != null">
                caller_jar_num = #{callerJarNum},
            </if>
            <if test="calleeJarNum != null">
                callee_jar_num = #{calleeJarNum},
            </if>
        </set>
        where call_id = #{callId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from lv_invoke_method_call where call_id = #{callId}
    </delete>

</mapper>

