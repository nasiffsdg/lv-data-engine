<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lv.infrastructure.invoke.dao.ClassNameDao">

    <resultMap type="com.lv.domain.invoke.ClassNameDo" id="ClassNameMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="projectId" column="project_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="VARCHAR"/>
        <result property="className" column="class_name" jdbcType="VARCHAR"/>
        <result property="simpleClassName" column="simple_class_name" jdbcType="VARCHAR"/>
        <result property="duplicateClass" column="duplicate_class" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ClassNameMap">
        select
          id, project_id, create_time, update_time, is_deleted, class_name, simple_class_name, duplicate_class
        from lv_invoke_class_name
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ClassNameMap">
        select
          id, project_id, create_time, update_time, is_deleted, class_name, simple_class_name, duplicate_class
        from lv_invoke_class_name
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="projectId != null">
                and project_id = #{projectId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDeleted != null and isDeleted != ''">
                and is_deleted = #{isDeleted}
            </if>
            <if test="classNameDo != null and classNameDo != ''">
                and class_name = #{classNameDo}
            </if>
            <if test="simpleClassName != null and simpleClassName != ''">
                and simple_class_name = #{simpleClassName}
            </if>
            <if test="duplicateClass != null">
                and duplicate_class = #{duplicateClass}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from lv_invoke_class_name
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="projectId != null">
                and project_id = #{projectId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDeleted != null and isDeleted != ''">
                and is_deleted = #{isDeleted}
            </if>
            <if test="classNameDo != null and classNameDo != ''">
                and class_name = #{classNameDo}
            </if>
            <if test="simpleClassName != null and simpleClassName != ''">
                and simple_class_name = #{simpleClassName}
            </if>
            <if test="duplicateClass != null">
                and duplicate_class = #{duplicateClass}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into lv_invoke_class_name(project_id, create_time, update_time, is_deleted, class_name, simple_class_name, duplicate_class)
        values (#{projectId}, #{createTime}, #{updateTime}, #{isDeleted}, #{classNameDo}, #{simpleClassName}, #{duplicateClass})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into lv_invoke_class_name(project_id, create_time, update_time, is_deleted, class_name, simple_class_name, duplicate_class)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.projectId}, #{entity.createTime}, #{entity.updateTime}, #{entity.isDeleted}, #{entity.classNameDo}, #{entity.simpleClassName}, #{entity.duplicateClass})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into lv_invoke_class_name(project_id, create_time, update_time, is_deleted, class_name, simple_class_name, duplicate_class)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.projectId}, #{entity.createTime}, #{entity.updateTime}, #{entity.isDeleted}, #{entity.classNameDo}, #{entity.simpleClassName}, #{entity.duplicateClass})
        </foreach>
        on duplicate key update
        project_id = values(project_id),
        create_time = values(create_time),
        update_time = values(update_time),
        is_deleted = values(is_deleted),
        class_name = values(class_name),
        simple_class_name = values(simple_class_name),
        duplicate_class = values(duplicate_class)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update lv_invoke_class_name
        <set>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="isDeleted != null and isDeleted != ''">
                is_deleted = #{isDeleted},
            </if>
            <if test="classNameDo != null and classNameDo != ''">
                class_name = #{classNameDo},
            </if>
            <if test="simpleClassName != null and simpleClassName != ''">
                simple_class_name = #{simpleClassName},
            </if>
            <if test="duplicateClass != null">
                duplicate_class = #{duplicateClass},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from lv_invoke_class_name where id = #{id}
    </delete>

</mapper>

